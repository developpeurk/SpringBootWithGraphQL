type Query{
    userWallets: [Wallet],
    walletById(id: String): Wallet,
    currencies : [Currency]
}

type Mutation{
   addWallet(walletDto: AddWalletRequestDTO): Wallet,
   walletTransfer(sourceWalletId: String, destinationWalletId: String, amount: Float): [WalletTransaction]
}

input AddWalletRequestDTO{
currencyCode: String,
balance: Float
}

type Wallet{
    id: String,
    balance: Float,
    createdAt: Float,
    currency: Currency,
    WalletTransactions: [WalletTransaction]
}

type Currency{
    code: String,
    name: String,
    salePrice: Float,
    purchasePrice: Float
}

type WalletTransaction{
    id: Int,
    timestamp: Float,
    wallet: Wallet,
    amount: Float,
    type: String,
    currentSaleCurrencyPrice: Float,
    currentPurchaseCurrencyPrice: Float


}